IF(WIN32)
	execute_process(COMMAND ${CMAKE_COMMAND} -E make_directory "${CMAKE_BINARY_DIR}/bin")
	execute_process(COMMAND ${CMAKE_COMMAND} -E make_directory "${CMAKE_BINARY_DIR}/bin/Debug")
	execute_process(COMMAND ${CMAKE_COMMAND} -E make_directory "${CMAKE_BINARY_DIR}/bin/Debug/plugins")
	execute_process(COMMAND ${CMAKE_COMMAND} -E make_directory "${CMAKE_BINARY_DIR}/bin/Debug/plugins/iconengines")
	execute_process(COMMAND ${CMAKE_COMMAND} -E make_directory "${CMAKE_BINARY_DIR}/bin/Debug/plugins/imageformats")
	execute_process(COMMAND ${CMAKE_COMMAND} -E make_directory "${CMAKE_BINARY_DIR}/bin/Debug/plugins/platforms")
	execute_process(COMMAND ${CMAKE_COMMAND} -E make_directory "${CMAKE_BINARY_DIR}/bin/RelWithDebInfo")
	execute_process(COMMAND ${CMAKE_COMMAND} -E make_directory "${CMAKE_BINARY_DIR}/bin/RelWithDebInfo/plugins")
	execute_process(COMMAND ${CMAKE_COMMAND} -E make_directory "${CMAKE_BINARY_DIR}/bin/RelWithDebInfo/plugins/iconengines")
	execute_process(COMMAND ${CMAKE_COMMAND} -E make_directory "${CMAKE_BINARY_DIR}/bin/RelWithDebInfo/plugins/imageformats")
	execute_process(COMMAND ${CMAKE_COMMAND} -E make_directory "${CMAKE_BINARY_DIR}/bin/RelWithDebInfo/plugins/platforms")
	execute_process(COMMAND ${CMAKE_COMMAND} -E make_directory "${CMAKE_BINARY_DIR}/bin/Release")
	execute_process(COMMAND ${CMAKE_COMMAND} -E make_directory "${CMAKE_BINARY_DIR}/bin/Release/plugins")
	execute_process(COMMAND ${CMAKE_COMMAND} -E make_directory "${CMAKE_BINARY_DIR}/bin/Release/plugins/iconengines")
	execute_process(COMMAND ${CMAKE_COMMAND} -E make_directory "${CMAKE_BINARY_DIR}/bin/Release/plugins/imageformats")
	execute_process(COMMAND ${CMAKE_COMMAND} -E make_directory "${CMAKE_BINARY_DIR}/bin/Release/plugins/platforms")
	
	file(GLOB_RECURSE files "${SPINE_DEP_DIR}/Discord/*.dll")
	foreach(filename ${files})
		get_filename_component(filenameShort ${filename} NAME)
		LINK_TO_FILE("${filename}" "${CMAKE_BINARY_DIR}/bin/Debug/${filenameShort}")
		LINK_TO_FILE("${filename}" "${CMAKE_BINARY_DIR}/bin/RelWithDebInfo/${filenameShort}")
		LINK_TO_FILE("${filename}" "${CMAKE_BINARY_DIR}/bin/Release/${filenameShort}")
	endforeach()
	
	file(GLOB_RECURSE files "${SPINE_DEP_DIR}/gmock/Debug/*.dll")
	foreach(filename ${files})
		get_filename_component(filenameShort ${filename} NAME)
		LINK_TO_FILE("${filename}" "${CMAKE_BINARY_DIR}/bin/Debug/${filenameShort}")
	endforeach()
	
	file(GLOB_RECURSE files "${SPINE_DEP_DIR}/gmock/Release/*.dll")
	foreach(filename ${files})
		get_filename_component(filenameShort ${filename} NAME)
		LINK_TO_FILE("${filename}" "${CMAKE_BINARY_DIR}/bin/RelWithDebInfo/${filenameShort}")
		LINK_TO_FILE("${filename}" "${CMAKE_BINARY_DIR}/bin/Release/${filenameShort}")
	endforeach()
	
	file(GLOB_RECURSE files "${SPINE_DEP_DIR}/mariadb/*.dll")
	foreach(filename ${files})
		get_filename_component(filenameShort ${filename} NAME)
		LINK_TO_FILE("${filename}" "${CMAKE_BINARY_DIR}/bin/Debug/${filenameShort}")
		LINK_TO_FILE("${filename}" "${CMAKE_BINARY_DIR}/bin/RelWithDebInfo/${filenameShort}")
		LINK_TO_FILE("${filename}" "${CMAKE_BINARY_DIR}/bin/Release/${filenameShort}")
	endforeach()
	
	file(GLOB_RECURSE files "${SPINE_DEP_DIR}/openSSL/*.dll")
	foreach(filename ${files})
		get_filename_component(filenameShort ${filename} NAME)
		LINK_TO_FILE("${filename}" "${CMAKE_BINARY_DIR}/bin/Debug/${filenameShort}")
		LINK_TO_FILE("${filename}" "${CMAKE_BINARY_DIR}/bin/RelWithDebInfo/${filenameShort}")
		LINK_TO_FILE("${filename}" "${CMAKE_BINARY_DIR}/bin/Release/${filenameShort}")
	endforeach()
	
	file(GLOB_RECURSE files "${SPINE_DEP_DIR}/sqlite/*.dll")
	foreach(filename ${files})
		get_filename_component(filenameShort ${filename} NAME)
		LINK_TO_FILE("${filename}" "${CMAKE_BINARY_DIR}/bin/Debug/${filenameShort}")
		LINK_TO_FILE("${filename}" "${CMAKE_BINARY_DIR}/bin/RelWithDebInfo/${filenameShort}")
		LINK_TO_FILE("${filename}" "${CMAKE_BINARY_DIR}/bin/Release/${filenameShort}")
	endforeach()
	
	file(GLOB_RECURSE files "${SPINE_DEP_DIR}/tinyxml2/Debug/*.dll")
	foreach(filename ${files})
		get_filename_component(filenameShort ${filename} NAME)
		LINK_TO_FILE("${filename}" "${CMAKE_BINARY_DIR}/bin/Debug/${filenameShort}")
	endforeach()
	
	file(GLOB_RECURSE files "${SPINE_DEP_DIR}/tinyxml2/Release/*.dll")
	foreach(filename ${files})
		get_filename_component(filenameShort ${filename} NAME)
		LINK_TO_FILE("${filename}" "${CMAKE_BINARY_DIR}/bin/RelWithDebInfo/${filenameShort}")
		LINK_TO_FILE("${filename}" "${CMAKE_BINARY_DIR}/bin/Release/${filenameShort}")
	endforeach()
	
	file(GLOB_RECURSE files "${SPINE_DEP_DIR}/translator/*.dll")
	foreach(filename ${files})
		get_filename_component(filenameShort ${filename} NAME)
		LINK_TO_FILE("${filename}" "${CMAKE_BINARY_DIR}/bin/Debug/${filenameShort}")
		LINK_TO_FILE("${filename}" "${CMAKE_BINARY_DIR}/bin/RelWithDebInfo/${filenameShort}")
		LINK_TO_FILE("${filename}" "${CMAKE_BINARY_DIR}/bin/Release/${filenameShort}")
	endforeach()
	
	file(GLOB_RECURSE files "${SPINE_DEP_DIR}/zlib/Debug/*.dll")
	foreach(filename ${files})
		get_filename_component(filenameShort ${filename} NAME)
		LINK_TO_FILE("${filename}" "${CMAKE_BINARY_DIR}/bin/Debug/${filenameShort}")
	endforeach()
	
	file(GLOB_RECURSE files "${SPINE_DEP_DIR}/zlib/Release/*.dll")
	foreach(filename ${files})
		get_filename_component(filenameShort ${filename} NAME)
		LINK_TO_FILE("${filename}" "${CMAKE_BINARY_DIR}/bin/RelWithDebInfo/${filenameShort}")
		LINK_TO_FILE("${filename}" "${CMAKE_BINARY_DIR}/bin/Release/${filenameShort}")
	endforeach()

	IF(WITH_CLIENT)
		file(GLOB_RECURSE files "${Qt5_DIR_Backup}/bin/icudt*.dll")
		foreach(filename ${files})
			get_filename_component(filename ${filename} NAME)
			LINK_TO_FILE("${Qt5_DIR_Backup}/bin/${filename}" "${CMAKE_BINARY_DIR}/bin/Debug/${filename}")
			LINK_TO_FILE("${Qt5_DIR_Backup}/bin/${filename}" "${CMAKE_BINARY_DIR}/bin/RelWithDebInfo/${filename}")
			LINK_TO_FILE("${Qt5_DIR_Backup}/bin/${filename}" "${CMAKE_BINARY_DIR}/bin/Release/${filename}")
		endforeach()

		file(GLOB_RECURSE files "${Qt5_DIR_Backup}/bin/icuin*.dll")
		foreach(filename ${files})
			get_filename_component(filename ${filename} NAME)
			LINK_TO_FILE("${Qt5_DIR_Backup}/bin/${filename}" "${CMAKE_BINARY_DIR}/bin/Debug/${filename}")
			LINK_TO_FILE("${Qt5_DIR_Backup}/bin/${filename}" "${CMAKE_BINARY_DIR}/bin/RelWithDebInfo/${filename}")
			LINK_TO_FILE("${Qt5_DIR_Backup}/bin/${filename}" "${CMAKE_BINARY_DIR}/bin/Release/${filename}")
		endforeach()

		file(GLOB_RECURSE files "${Qt5_DIR_Backup}/bin/icuuc*.dll")
		foreach(filename ${files})
			get_filename_component(filename ${filename} NAME)
			LINK_TO_FILE("${Qt5_DIR_Backup}/bin/${filename}" "${CMAKE_BINARY_DIR}/bin/Debug/${filename}")
			LINK_TO_FILE("${Qt5_DIR_Backup}/bin/${filename}" "${CMAKE_BINARY_DIR}/bin/RelWithDebInfo/${filename}")
			LINK_TO_FILE("${Qt5_DIR_Backup}/bin/${filename}" "${CMAKE_BINARY_DIR}/bin/Release/${filename}")
		endforeach()

		LINK_TO_FILE("${Qt5_DIR_Backup}/bin/libEGL.dll" "${CMAKE_BINARY_DIR}/bin/Debug/libEGL.dll")
		LINK_TO_FILE("${Qt5_DIR_Backup}/bin/libEGL.dll" "${CMAKE_BINARY_DIR}/bin/RelWithDebInfo/libEGL.dll")
		LINK_TO_FILE("${Qt5_DIR_Backup}/bin/libEGL.dll" "${CMAKE_BINARY_DIR}/bin/Release/libEGL.dll")
		
		LINK_TO_FILE("${Qt5_DIR_Backup}/bin/libGLESv2.dll" "${CMAKE_BINARY_DIR}/bin/Debug/libGLESv2.dll")
		LINK_TO_FILE("${Qt5_DIR_Backup}/bin/libGLESv2.dll" "${CMAKE_BINARY_DIR}/bin/RelWithDebInfo/libGLESv2.dll")
		LINK_TO_FILE("${Qt5_DIR_Backup}/bin/libGLESv2.dll" "${CMAKE_BINARY_DIR}/bin/Release/libGLESv2.dll")
		
		LINK_TO_FILE("${Qt5_DIR_Backup}/plugins/platforms/qwindowsd.dll" "${CMAKE_BINARY_DIR}/bin/Debug/plugins/platforms/qwindowsd.dll")
		LINK_TO_FILE("${Qt5_DIR_Backup}/plugins/platforms/qwindows.dll" "${CMAKE_BINARY_DIR}/bin/RelWithDebInfo/plugins/platforms/qwindows.dll")
		LINK_TO_FILE("${Qt5_DIR_Backup}/plugins/platforms/qwindows.dll" "${CMAKE_BINARY_DIR}/bin/Release/plugins/platforms/qwindows.dll")

		configure_file(${CMAKE_SOURCE_DIR}/config/qt.conf ${CMAKE_BINARY_DIR}/bin/Debug/qt.conf COPYONLY)
		configure_file(${CMAKE_SOURCE_DIR}/config/qt.conf ${CMAKE_BINARY_DIR}/bin/RelWithDebInfo/qt.conf COPYONLY)
		configure_file(${CMAKE_SOURCE_DIR}/config/qt.conf ${CMAKE_BINARY_DIR}/bin/Release/qt.conf COPYONLY)

		LINK_TO_FILE("${Qt5_DIR_Backup}/bin/Qt5Concurrentd.dll" "${CMAKE_BINARY_DIR}/bin/Debug/Qt5Concurrentd.dll")
		LINK_TO_FILE("${Qt5_DIR_Backup}/bin/Qt5Concurrent.dll" "${CMAKE_BINARY_DIR}/bin/RelWithDebInfo/Qt5Concurrent.dll")
		LINK_TO_FILE("${Qt5_DIR_Backup}/bin/Qt5Concurrent.dll" "${CMAKE_BINARY_DIR}/bin/Release/Qt5Concurrent.dll")
		
		LINK_TO_FILE("${Qt5_DIR_Backup}/bin/Qt5Cored.dll" "${CMAKE_BINARY_DIR}/bin/Debug/Qt5Cored.dll")
		LINK_TO_FILE("${Qt5_DIR_Backup}/bin/Qt5Core.dll" "${CMAKE_BINARY_DIR}/bin/RelWithDebInfo/Qt5Core.dll")
		LINK_TO_FILE("${Qt5_DIR_Backup}/bin/Qt5Core.dll" "${CMAKE_BINARY_DIR}/bin/Release/Qt5Core.dll")
		
		LINK_TO_FILE("${Qt5_DIR_Backup}/bin/Qt5Guid.dll" "${CMAKE_BINARY_DIR}/bin/Debug/Qt5Guid.dll")
		LINK_TO_FILE("${Qt5_DIR_Backup}/bin/Qt5Gui.dll" "${CMAKE_BINARY_DIR}/bin/RelWithDebInfo/Qt5Gui.dll")
		LINK_TO_FILE("${Qt5_DIR_Backup}/bin/Qt5Gui.dll" "${CMAKE_BINARY_DIR}/bin/Release/Qt5Gui.dll")
		
		LINK_TO_FILE("${Qt5_DIR_Backup}/plugins/imageformats/qicod.dll" "${CMAKE_BINARY_DIR}/bin/Debug/plugins/imageformats/qicod.dll")
		LINK_TO_FILE("${Qt5_DIR_Backup}/plugins/imageformats/qico.dll" "${CMAKE_BINARY_DIR}/bin/RelWithDebInfo/plugins/imageformats/qico.dll")
		LINK_TO_FILE("${Qt5_DIR_Backup}/plugins/imageformats/qico.dll" "${CMAKE_BINARY_DIR}/bin/Release/plugins/imageformats/qico.dll")
		
		LINK_TO_FILE("${Qt5_DIR_Backup}/plugins/imageformats/qjpegd.dll" "${CMAKE_BINARY_DIR}/bin/Debug/plugins/imageformats/qjpegd.dll")
		LINK_TO_FILE("${Qt5_DIR_Backup}/plugins/imageformats/qjpeg.dll" "${CMAKE_BINARY_DIR}/bin/RelWithDebInfo/plugins/imageformats/qjpeg.dll")
		LINK_TO_FILE("${Qt5_DIR_Backup}/plugins/imageformats/qjpeg.dll" "${CMAKE_BINARY_DIR}/bin/Release/plugins/imageformats/qjpeg.dll")
		
		LINK_TO_FILE("${Qt5_DIR_Backup}/bin/Qt5Networkd.dll" "${CMAKE_BINARY_DIR}/bin/Debug/Qt5Networkd.dll")
		LINK_TO_FILE("${Qt5_DIR_Backup}/bin/Qt5Network.dll" "${CMAKE_BINARY_DIR}/bin/RelWithDebInfo/Qt5Network.dll")
		LINK_TO_FILE("${Qt5_DIR_Backup}/bin/Qt5Network.dll" "${CMAKE_BINARY_DIR}/bin/Release/Qt5Network.dll")
		
		LINK_TO_FILE("${Qt5_DIR_Backup}/bin/Qt5Svgd.dll" "${CMAKE_BINARY_DIR}/bin/Debug/Qt5Svgd.dll")
		LINK_TO_FILE("${Qt5_DIR_Backup}/bin/Qt5Svg.dll" "${CMAKE_BINARY_DIR}/bin/RelWithDebInfo/Qt5Svg.dll")
		LINK_TO_FILE("${Qt5_DIR_Backup}/bin/Qt5Svg.dll" "${CMAKE_BINARY_DIR}/bin/Release/Qt5Svg.dll")
		
		LINK_TO_FILE("${Qt5_DIR_Backup}/plugins/imageformats/qsvgd.dll" "${CMAKE_BINARY_DIR}/bin/Debug/plugins/imageformats/qsvgd.dll")
		LINK_TO_FILE("${Qt5_DIR_Backup}/plugins/imageformats/qsvg.dll" "${CMAKE_BINARY_DIR}/bin/RelWithDebInfo/plugins/imageformats/qsvg.dll")
		LINK_TO_FILE("${Qt5_DIR_Backup}/plugins/imageformats/qsvg.dll" "${CMAKE_BINARY_DIR}/bin/Release/plugins/imageformats/qsvg.dll")
		
		LINK_TO_FILE("${Qt5_DIR_Backup}/bin/Qt5Widgetsd.dll" "${CMAKE_BINARY_DIR}/bin/Debug/Qt5Widgetsd.dll")
		LINK_TO_FILE("${Qt5_DIR_Backup}/bin/Qt5Widgets.dll" "${CMAKE_BINARY_DIR}/bin/RelWithDebInfo/Qt5Widgets.dll")
		LINK_TO_FILE("${Qt5_DIR_Backup}/bin/Qt5Widgets.dll" "${CMAKE_BINARY_DIR}/bin/Release/Qt5Widgets.dll")
		IF(WIN32)
			LINK_TO_FILE("${Qt5_DIR_Backup}/bin/Qt5WinExtrasd.dll" "${CMAKE_BINARY_DIR}/bin/Debug/Qt5WinExtrasd.dll")
			LINK_TO_FILE("${Qt5_DIR_Backup}/bin/Qt5WinExtras.dll" "${CMAKE_BINARY_DIR}/bin/RelWithDebInfo/Qt5WinExtras.dll")
			LINK_TO_FILE("${Qt5_DIR_Backup}/bin/Qt5WinExtras.dll" "${CMAKE_BINARY_DIR}/bin/Release/Qt5WinExtras.dll")
		ENDIF(WIN32)
	ENDIF(WITH_CLIENT)
ENDIF(WIN32)
IF(UNIX)
	file(GLOB_RECURSE files "${SPINE_DEP_DIR}/*.so*")
	foreach(filename ${files})
		get_filename_component(filename_pure ${filename} NAME)
		execute_process(COMMAND ${CMAKE_COMMAND} -E create_symlink ${filename} ${CMAKE_BINARY_DIR}/bin/${filename_pure})
	endforeach()
ENDIF(UNIX)
